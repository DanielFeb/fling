DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.User [READ]: select user0_.id as id1_2_0_, user0_.username as username2_2_0_, user0_.password as password3_2_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity indi.daniel.fling.hibernate.entityxml.User: select user0_.id as id1_2_0_, user0_.username as username2_2_0_, user0_.password as password3_2_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity indi.daniel.fling.hibernate.entityxml.User: select user0_.id as id1_2_0_, user0_.username as username2_2_0_, user0_.password as password3_2_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: indi.daniel.fling.hibernate.entityxml.Category
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from category where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select category_.id, category_.name as name2_0_ from category category_ where category_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into category (name, id) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update category set name=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from category where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into category (name) values (?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@847f3e7]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.Category)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.Category, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.Category)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.Category [NONE]: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19593091]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.Category)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.Category, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.Category)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.Category [READ]: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity indi.daniel.fling.hibernate.entityxml.Category: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity indi.daniel.fling.hibernate.entityxml.Category: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5f14a673
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 6b905c8a-126f-44b0-be5d-8a1e483ea639 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.SQL - select product0_.id as id1_1_0_, product0_.name as name2_1_0_, product0_.price as price3_1_0_, product0_.category_id as category4_1_0_ from product product0_ where product0_.id=?
DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [indi.daniel.fling.hibernate.entityxml.Product#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [indi.daniel.fling.hibernate.entityxml.Product#1]
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : indi.daniel.fling.hibernate.entityxml.Product#1
DEBUG main org.hibernate.SQL - select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [indi.daniel.fling.hibernate.entityxml.Category#2]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [indi.daniel.fling.hibernate.entityxml.Category#2]
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : indi.daniel.fling.hibernate.entityxml.Category#2
DEBUG main org.hibernate.internal.SessionImpl - Initializing proxy: [indi.daniel.fling.hibernate.entityxml.Category#1]
DEBUG main org.hibernate.SQL - select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [indi.daniel.fling.hibernate.entityxml.Category#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [indi.daniel.fling.hibernate.entityxml.Category#1]
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : indi.daniel.fling.hibernate.entityxml.Category#1
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - indi.daniel.fling.hibernate.entityxml.Category{name=category1, id=1}
DEBUG main org.hibernate.internal.util.EntityPrinter - indi.daniel.fling.hibernate.entityxml.Product{price=100.0, name=newName, id=1, category=indi.daniel.fling.hibernate.entityxml.Category#2}
DEBUG main org.hibernate.internal.util.EntityPrinter - indi.daniel.fling.hibernate.entityxml.Category{name=category2, id=2}
DEBUG main org.hibernate.SQL - update product set name=?, price=?, category_id=? where id=?
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@336365bc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6175619b]
DEBUG main org.hibernate.service.internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
INFO main org.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/fling]
DEBUG main org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
