DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@447a020] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3faf2e7d]
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.User] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.User] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from user where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select user_.id, user_.username as username2_0_, user_.password as password3_0_ from user user_ where user_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into user (username, password, id) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update user set username=?, password=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from user where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into user (username, password) values (?, ?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352e612e]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.User)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.User, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.User [NONE]: select user0_.id as id1_0_0_, user0_.username as username2_0_0_, user0_.password as password3_0_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213deac2]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.User)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.User, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.User [READ]: select user0_.id as id1_0_0_, user0_.username as username2_0_0_, user0_.password as password3_0_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity indi.daniel.fling.hibernate.entityxml.User: select user0_.id as id1_0_0_, user0_.username as username2_0_0_, user0_.password as password3_0_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity indi.daniel.fling.hibernate.entityxml.User: select user0_.id as id1_0_0_, user0_.username as username2_0_0_, user0_.password as password3_0_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1136b469
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: e7f63fdf-87a3-4d22-bfc0-b378ccc28fc7 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.3.3.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG main org.hibernate.cfg.Configuration - Building session factory using internal StandardServiceRegistryBuilder
DEBUG main org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG main org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70be0a2b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70be0a2b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@70be0a2b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23986957
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d3a22a9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b19b79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@43ee72e6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@43ee72e6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43ee72e6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2fd6b6c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2fd6b6c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fd6b6c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@37918c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@37918c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37918c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3c72f59f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3c72f59f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c72f59f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3b07a0d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3b07a0d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3b07a0d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c1d9d4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c1d9d4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c1d9d4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@d706f19
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@d706f19
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@d706f19
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@29176cc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@29176cc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@124c278f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@124c278f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6973bf95
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6973bf95
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47542153
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@309e345f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25d250c6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25d250c6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@318ba8c8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@318ba8c8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5e316c74
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e316c74
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f010382
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f010382
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1f0f1111
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1f0f1111
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ccddd20
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ccddd20
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59d016c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59d016c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48aaecc3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48aaecc3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3c22fc4c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3c22fc4c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2f7c2f4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f7c2f4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5be6e01c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5be6e01c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@78b66d36
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@78b66d36
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@78b66d36
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69b2283a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@76908cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76908cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76908cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@49b0b76
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@be64738
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@be64738
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4b5d6a01
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b5d6a01
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c130745
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c130745
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@703580bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@703580bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e8f8e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e8f8e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29626d54
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4b0b0854
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b0b0854
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4b0b0854
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@67a20f67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@67a20f67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@67a20f67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@9225652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1ddf84b8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5e82df6a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@31368b99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@31368b99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ac3c60d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@15eb5ee5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15eb5ee5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@27ce24aa
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27ce24aa
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ed7259e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@647e447
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@619713e5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7193666c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7193666c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1dde4cb2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7714e963
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20ce78ec
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@393671df
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@56620197
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6eda5c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55b7a4e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f058f00
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.jaxb.internal.MappingBinder - Performing JAXB binding of hbm.xml document : Origin(name=indi/daniel/fling/mapping/User.hbm.xml,type=RESOURCE)
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.jaxb.internal.MappingBinder - Performing JAXB binding of hbm.xml document : Origin(name=indi/daniel/fling/mapping/Category.hbm.xml,type=RESOURCE)
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
WARN main org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO main org.hibernate.orm.connections.pooling - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/fling]
INFO main org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {user=root, password=Xqf123123}
INFO main org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
DEBUG main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
INFO main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.17
      major : 5
      minor : 7
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.2 ( Revision: c6da0fe501ad43d4ed6483b60ea796dc9fbe2d7b )
      major : 6
      minor : 0
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.1
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG main org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG main org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG main org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28e8dde3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d23017e]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: indi.daniel.fling.hibernate.entityxml.User -> user
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: id -> [id]
DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: username -> [username]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: password -> [password]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: indi.daniel.fling.hibernate.entityxml.Category -> category
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: id -> [id]
DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [category]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: name -> [name]
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.cfg.Settings - SessionFactory name : null
DEBUG main org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
DEBUG main org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.Settings - Statistics: disabled
DEBUG main org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.Settings - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
DEBUG main org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.Settings - Default batch fetch size: -1
DEBUG main org.hibernate.cfg.Settings - Maximum outer join fetch depth: 2
DEBUG main org.hibernate.cfg.Settings - Default null ordering: NONE
DEBUG main org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.Settings - JTA Track by Thread: enabled
DEBUG main org.hibernate.cfg.Settings - Query language substitutions: {}
DEBUG main org.hibernate.cfg.Settings - Named query checking : enabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache factory: null
DEBUG main org.hibernate.cfg.Settings - Second-level cache region prefix: null
DEBUG main org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC batch size: 15
DEBUG main org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
DEBUG main org.hibernate.cfg.Settings - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.Settings - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.Settings - JDBC result set fetch size: null
DEBUG main org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
DEBUG main org.hibernate.cfg.Settings - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.Settings - JPA compliance - query : 
DEBUG main org.hibernate.cfg.Settings - JPA compliance - closed-handling : 
DEBUG main org.hibernate.cfg.Settings - JPA compliance - lists : 
DEBUG main org.hibernate.cfg.Settings - JPA compliance - transactions : 
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/tools.jar:/Users/daniel/Documents/projects/opensource/fling/target/classes:/Users/daniel/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/daniel/.m2/repository/org/hibernate/hibernate-core/5.3.3.Final/hibernate-core-5.3.3.Final.jar:/Users/daniel/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/daniel/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/daniel/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/daniel/.m2/repository/net/bytebuddy/byte-buddy/1.8.13/byte-buddy-1.8.13.jar:/Users/daniel/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/daniel/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/daniel/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/daniel/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/daniel/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/daniel/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/daniel/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/daniel/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/daniel/.m2/repository/mysql/mysql-connector-java/6.0.2/mysql-connector-java-6.0.2.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, user.country.format=CN, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib, sun.java.command=com.intellij.rt.execution.application.AppMain indi.daniel.fling.hibernate.TestHibernate, sun.cpu.endian=little, user.home=/Users/daniel, user.language=en, idea.launcher.port=7534, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, person=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_121-b13, user.name=daniel, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/fling, file.encoding=UTF-8, hibernate.person=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/k9/nkl0xpxs5pv7l365x48fz0_h0000gn/T/, idea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin, java.version=1.8.0_121, user.dir=/Users/daniel/Documents/projects/opensource/fling, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7db82169, java.library.path=/Users/daniel/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.121-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/daniel/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0}
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28e8dde3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61526469]
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.User] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.User] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.Category] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.Category
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.Category] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.Category
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from user where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select user_.id, user_.username as username2_1_, user_.password as password3_1_ from user user_ where user_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into user (username, password, id) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update user set username=?, password=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from user where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into user (username, password) values (?, ?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.User)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.User, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.User [NONE]: select user0_.id as id1_1_0_, user0_.username as username2_1_0_, user0_.password as password3_1_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.User)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.User, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.User [READ]: select user0_.id as id1_1_0_, user0_.username as username2_1_0_, user0_.password as password3_1_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity indi.daniel.fling.hibernate.entityxml.User: select user0_.id as id1_1_0_, user0_.username as username2_1_0_, user0_.password as password3_1_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity indi.daniel.fling.hibernate.entityxml.User: select user0_.id as id1_1_0_, user0_.username as username2_1_0_, user0_.password as password3_1_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: indi.daniel.fling.hibernate.entityxml.Category
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from category where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select category_.id, category_.name as name2_0_ from category category_ where category_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into category (name, id) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update category set name=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from category where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into category (name) values (?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.Category)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.Category, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.Category)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.Category [NONE]: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1813f3e9]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.Category)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.Category, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.Category)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.Category [READ]: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity indi.daniel.fling.hibernate.entityxml.Category: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity indi.daniel.fling.hibernate.entityxml.Category: select category0_.id as id1_0_0_, category0_.name as name2_0_0_ from category category0_ where category0_.id=?
DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b3f3ba0
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 6731d3e8-35dc-4efd-994f-090a62956f41 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - insert into category (name) values (?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 1
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@325bb9a6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@61526469]
DEBUG main org.hibernate.service.internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
INFO main org.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/fling]
DEBUG main org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.3.3.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG main org.hibernate.cfg.Configuration - Building session factory using internal StandardServiceRegistryBuilder
DEBUG main org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG main org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70be0a2b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70be0a2b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@70be0a2b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23986957
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d3a22a9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b19b79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@43ee72e6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@43ee72e6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43ee72e6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2fd6b6c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2fd6b6c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fd6b6c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@37918c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@37918c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37918c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3c72f59f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3c72f59f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c72f59f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3b07a0d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3b07a0d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3b07a0d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c1d9d4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c1d9d4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c1d9d4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@d706f19
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@d706f19
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@d706f19
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@29176cc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@29176cc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@124c278f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@124c278f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6973bf95
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6973bf95
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47542153
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@309e345f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25d250c6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25d250c6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@318ba8c8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@318ba8c8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5e316c74
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e316c74
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f010382
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f010382
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1f0f1111
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1f0f1111
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ccddd20
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ccddd20
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59d016c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59d016c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48aaecc3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48aaecc3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3c22fc4c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3c22fc4c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2f7c2f4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f7c2f4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5be6e01c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5be6e01c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@78b66d36
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@78b66d36
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@78b66d36
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69b2283a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@76908cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76908cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76908cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@49b0b76
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@be64738
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@be64738
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4b5d6a01
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b5d6a01
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c130745
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c130745
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@703580bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@703580bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e8f8e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e8f8e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29626d54
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4b0b0854
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b0b0854
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4b0b0854
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@67a20f67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@67a20f67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@67a20f67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@9225652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1ddf84b8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5e82df6a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@31368b99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@31368b99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ac3c60d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@15eb5ee5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15eb5ee5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@27ce24aa
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27ce24aa
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ed7259e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@647e447
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@619713e5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7193666c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7193666c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1dde4cb2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7714e963
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20ce78ec
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@393671df
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@56620197
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6eda5c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55b7a4e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f058f00
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.jaxb.internal.MappingBinder - Performing JAXB binding of hbm.xml document : Origin(name=indi/daniel/fling/mapping/User.hbm.xml,type=RESOURCE)
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.jaxb.internal.MappingBinder - Performing JAXB binding of hbm.xml document : Origin(name=indi/daniel/fling/mapping/Product.hbm.xml,type=RESOURCE)
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG main org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.boot.jaxb.internal.MappingBinder - Performing JAXB binding of hbm.xml document : Origin(name=indi/daniel/fling/mapping/Category.hbm.xml,type=RESOURCE)
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
WARN main org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO main org.hibernate.orm.connections.pooling - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/fling]
INFO main org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {user=root, password=Xqf123123}
INFO main org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
DEBUG main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
INFO main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.17
      major : 5
      minor : 7
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.2 ( Revision: c6da0fe501ad43d4ed6483b60ea796dc9fbe2d7b )
      major : 6
      minor : 0
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.1
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG main org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG main org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG main org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcfa5a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1817f1eb]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: indi.daniel.fling.hibernate.entityxml.User -> user
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: id -> [id]
DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: username -> [username]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: password -> [password]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: indi.daniel.fling.hibernate.entityxml.Product -> product
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: id -> [id]
DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [product]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: name -> [name]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: price -> [price]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: indi.daniel.fling.hibernate.entityxml.Category -> category
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: id -> [id]
DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [category]
DEBUG main org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: name -> [name]
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.cfg.Settings - SessionFactory name : null
DEBUG main org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
DEBUG main org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.Settings - Statistics: disabled
DEBUG main org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.Settings - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
DEBUG main org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.Settings - Default batch fetch size: -1
DEBUG main org.hibernate.cfg.Settings - Maximum outer join fetch depth: 2
DEBUG main org.hibernate.cfg.Settings - Default null ordering: NONE
DEBUG main org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.Settings - JTA Track by Thread: enabled
DEBUG main org.hibernate.cfg.Settings - Query language substitutions: {}
DEBUG main org.hibernate.cfg.Settings - Named query checking : enabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache factory: null
DEBUG main org.hibernate.cfg.Settings - Second-level cache region prefix: null
DEBUG main org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC batch size: 15
DEBUG main org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
DEBUG main org.hibernate.cfg.Settings - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.Settings - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.Settings - JDBC result set fetch size: null
DEBUG main org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
DEBUG main org.hibernate.cfg.Settings - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.Settings - JPA compliance - query : 
DEBUG main org.hibernate.cfg.Settings - JPA compliance - closed-handling : 
DEBUG main org.hibernate.cfg.Settings - JPA compliance - lists : 
DEBUG main org.hibernate.cfg.Settings - JPA compliance - transactions : 
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/lib/tools.jar:/Users/daniel/Documents/projects/opensource/fling/target/classes:/Users/daniel/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/daniel/.m2/repository/org/hibernate/hibernate-core/5.3.3.Final/hibernate-core-5.3.3.Final.jar:/Users/daniel/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/daniel/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/daniel/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/daniel/.m2/repository/net/bytebuddy/byte-buddy/1.8.13/byte-buddy-1.8.13.jar:/Users/daniel/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/daniel/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/daniel/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/daniel/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/daniel/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/daniel/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/daniel/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/daniel/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/daniel/.m2/repository/mysql/mysql-connector-java/6.0.2/mysql-connector-java-6.0.2.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, user.country.format=CN, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib, sun.java.command=com.intellij.rt.execution.application.AppMain indi.daniel.fling.hibernate.TestHibernate, sun.cpu.endian=little, user.home=/Users/daniel, user.language=en, idea.launcher.port=7535, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, person=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_121-b13, user.name=daniel, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/fling, file.encoding=UTF-8, hibernate.person=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/k9/nkl0xpxs5pv7l365x48fz0_h0000gn/T/, idea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin, java.version=1.8.0_121, user.dir=/Users/daniel/Documents/projects/opensource/fling, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3276732, java.library.path=/Users/daniel/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.121-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/daniel/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0}
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcfa5a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@eb6449b]
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.Product] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.Product
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.Product] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.Product
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.User] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.User] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.Category] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.Category
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [indi.daniel.fling.hibernate.entityxml.Category] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : indi.daniel.fling.hibernate.entityxml.Category
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: indi.daniel.fling.hibernate.entityxml.Product
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from product where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select product_.id, product_.name as name2_1_, product_.price as price3_1_ from product product_ where product_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update product set name=?, price=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from product where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into product (name, price) values (?, ?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267bbe1a]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : price
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.Product)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.Product, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.Product [NONE]: select product0_.id as id1_1_0_, product0_.name as name2_1_0_, product0_.price as price3_1_0_ from product product0_ where product0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2189e7a7]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : price
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.Product)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.Product, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.Product [READ]: select product0_.id as id1_1_0_, product0_.name as name2_1_0_, product0_.price as price3_1_0_ from product product0_ where product0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity indi.daniel.fling.hibernate.entityxml.Product: select product0_.id as id1_1_0_, product0_.name as name2_1_0_, product0_.price as price3_1_0_ from product product0_ where product0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity indi.daniel.fling.hibernate.entityxml.Product: select product0_.id as id1_1_0_, product0_.name as name2_1_0_, product0_.price as price3_1_0_ from product product0_ where product0_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: indi.daniel.fling.hibernate.entityxml.User
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from user where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select user_.id, user_.username as username2_2_, user_.password as password3_2_ from user user_ where user_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into user (username, password, id) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update user set username=?, password=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from user where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into user (username, password) values (?, ?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72458efc]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=indi.daniel.fling.hibernate.entityxml.User)
    - Returns
       - EntityReturnImpl(entity=indi.daniel.fling.hibernate.entityxml.User, querySpaceUid=<gen:0>, path=indi.daniel.fling.hibernate.entityxml.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=indi.daniel.fling.hibernate.entityxml.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity indi.daniel.fling.hibernate.entityxml.User [NONE]: select user0_.id as id1_2_0_, user0_.username as username2_2_0_, user0_.password as password3_2_0_ from user user0_ where user0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a74d228]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
